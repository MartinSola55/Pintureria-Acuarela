@{
    ViewBag.Title = "Ordenes";
    List<Product_Order> products = Session["Basket"] as List<Product_Order>;
    double totalLiters = 0;
    foreach (Product_Order item in products)
    {
        totalLiters += item.quantity * (item.Product.id_capacity != null ? item.Product.Capacity.capacity : 0);
    }
}

<link href="~/Content/notification.css" rel="stylesheet" />

<div class="d-flex align-items-end">
    <a class="btn btn-dark py-2" href="../../Orders/Create"><i class="bi bi-arrow-left"></i></a>
    <div class="d-flex flex-grow-1 justify-content-center me-md-4">
        <h1 class="text-center">Productos añadidos a la orden</h1>
    </div>
</div>
<hr class="mb-4" />

@{ if (ViewBag.Message != null)
    {
        <div class="py-3 mb-5 @(ViewBag.Error == 1 ? "containerError1" : "")@(ViewBag.Error == 2 ? "containerError2" : "")@(ViewBag.Error == null ? "onlyMessage" : "")" id="notificationContainer">
            <div class="px-2 d-flex flex-row justify-content-between align-items-center">
                <div id="txtNotification">@ViewBag.Message</div>
                <button id="btnCloseNotification" type="button" aria-label="Cerrar">
                    <svg aria-hidden="true" height="16" viewBox="0 0 16 16" version="1.1" width="16" data-view-component="true" class="octicon octicon-x">
                        <path id="closeSVG" fill="rgb(0,75,180)" class="@(ViewBag.Error == 1 ? "error1" : "") @(ViewBag.Error == 2 ? "error2" : "") @(ViewBag.Error == null ? "onlyMessage" : "")" d="M3.72 3.72a.75.75 0 011.06 0L8 6.94l3.22-3.22a.75.75 0 111.06 1.06L9.06 8l3.22 3.22a.75.75 0 11-1.06 1.06L8 9.06l-3.22 3.22a.75.75 0 01-1.06-1.06L6.94 8 3.72 4.78a.75.75 0 010-1.06z"></path>
                    </svg>
                </button>
            </div>
        </div>
    }
}

<table class="table">
    <tr>
        <th>
            Descripción
        </th>
        <th>
            Marca
        </th>
        <th>
            Categoría
        </th>
        <th>
            Subcategoría
        </th>
        <th class="text-center">
            Código interno
        </th>
        <th class="text-center">
            Cantidad pedida
        </th>
        <th class="text-center">
            Eliminar
        </th>
    </tr>

    @foreach (Product_Order item in products.OrderByDescending(p => p.quantity))
    {
        <tr>
            <td>
                @item.Product.description
            </td>
            <td>
                @item.Product.Brand.name
            </td>
            <td>
                @(item.Product.id_category != null ? item.Product.Category.description : "-")
            </td>
            <td>
                @(item.Product.id_subcategory != null ? item.Product.Subcategory.description : "-")
            </td>
            <td class="text-center">
                @(item.Product.internal_code != null ? item.Product.internal_code.ToString() : "-")
            </td>
            <td class="text-center">
                @Html.DisplayFor(modelItem => item.quantity)
            </td>
            <td class="text-center">
                @using (Html.BeginForm("RemoveProductBasket", "Orders", FormMethod.Post))
                {
                    @Html.AntiForgeryToken()
                    @Html.Hidden("id_prod", item.Product.id)
                    <button class="btn text-white" style="background-color: crimson" type="submit"><i class='bi bi-trash3'></i></button>
                }
            </td>
        </tr>
    }
    <tr>
        <td>
            <b>Total: </b>@totalLiters litros
        </td>
    </tr>
</table>

<div class="d-flex flex-row justify-content-between pe-3 pt-4">
    @using (Html.BeginForm("CreateOrder", "Orders", FormMethod.Post))
    {
        @Html.AntiForgeryToken()
        <button class="btn" style="background-color: yellowgreen" type="submit">Crear orden</button>
    }
</div>

<script src="~/Scripts/notification.js" type="text/javascript"></script>