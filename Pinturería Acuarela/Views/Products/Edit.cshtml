@model Pinturería_Acuarela.Product

@{
    ViewBag.Title = "Productos";
}

<link href="~/Content/notification.css" rel="stylesheet" />

<div class="d-flex align-items-end">
    <a class="btn btn-dark py-2" href="../../Products/Index"><i class="bi bi-arrow-left"></i></a>
    <div class="d-flex flex-grow-1 justify-content-center me-md-4">
        <h1 class="text-center">Editar producto</h1>
    </div>
</div>
<hr class="mb-4" />

@{ if (ViewBag.Message != null)
    {
        <div class="py-3 mb-5 @(ViewBag.Error == 1 ? "containerError1" : "")@(ViewBag.Error == 2 ? "containerError2" : "")@(ViewBag.Error == null ? "onlyMessage" : "")" id="notificationContainer">
            <div class="px-2 d-flex flex-row justify-content-between align-items-center">
                <div id="txtNotification">@ViewBag.Message</div>
                <button id="btnCloseNotification" type="button" aria-label="Cerrar">
                    <svg aria-hidden="true" height="16" viewBox="0 0 16 16" version="1.1" width="16" data-view-component="true" class="octicon octicon-x">
                        <path id="closeSVG" fill="rgb(0,75,180)" class="@(ViewBag.Error == 1 ? "error1" : "") @(ViewBag.Error == 2 ? "error2" : "") @(ViewBag.Error == null ? "onlyMessage" : "")" d="M3.72 3.72a.75.75 0 011.06 0L8 6.94l3.22-3.22a.75.75 0 111.06 1.06L9.06 8l3.22 3.22a.75.75 0 11-1.06 1.06L8 9.06l-3.22 3.22a.75.75 0 01-1.06-1.06L6.94 8 3.72 4.78a.75.75 0 010-1.06z"></path>
                    </svg>
                </button>
            </div>
        </div>
    }
}

<div class="container d-flex justify-content-center p-5 mt-5" id="formContainer">
    @using (Html.BeginForm("Edit", "Products", FormMethod.Post, new { @id = "formProduct", @class = "mx-auto" }))
    {
        @Html.AntiForgeryToken()

        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div>
            @Html.LabelFor(model => model.description, "Descripcion", htmlAttributes: new { @class = "control-label" })
            @Html.EditorFor(model => model.description, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.description, "", new { @class = "text-danger mb-4 mt-3" })
        </div>

        <div class="mt-3">
            @Html.LabelFor(model => model.id_brand, "Marca", htmlAttributes: new { @class = "control-label" })
            @Html.DropDownList("id_brand", null, "Seleccionar marca", htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.id_brand, "", new { @class = "text-danger mb-4 mt-3" })
        </div>

        <div class="mt-3">
            @Html.LabelFor(model => model.id_category, "Categoria", htmlAttributes: new { @class = "control-label" })
            @Html.DropDownList("id_category", null, "Sin categoria", htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.id_category, "", new { @class = "text-danger mb-4 mt-3" })
        </div>

        <div class="mt-3">
            @Html.LabelFor(model => model.id_subcategory, "Subcategoria", htmlAttributes: new { @class = "control-label" })
            @Html.DropDownList("id_subcategory", null, "Sin subcategoria", htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.id_subcategory, "", new { @class = "text-danger mb-4 mt-3" })
        </div>

        <div class="mt-3">
            @Html.LabelFor(model => model.id_capacity, "Capacidad", htmlAttributes: new { @class = "control-label" })
            @Html.DropDownList("id_capacity", null, "Sin capacidad", htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.id_capacity, "", new { @class = "text-danger mb-4 mt-3" })
        </div>

        <div class="mt-3">
            @Html.LabelFor(model => model.id_color, "Color", htmlAttributes: new { @class = "control-label" })
            @Html.DropDownList("id_color", null, "Sin color", htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.id_color, "", new { @class = "text-danger mb-4 mt-3" })
        </div>

        <div class="mt-3">
            @Html.LabelFor(model => model.internal_code, "Codigo interno", htmlAttributes: new { @class = "control-label" })
            @Html.EditorFor(model => model.internal_code, new { htmlAttributes = new { @class = "form-control", @min = 1, @max = 20000, @placeholder = "xxxxx" } })
            @Html.ValidationMessageFor(model => model.internal_code, "", new { @class = "text-danger mb-4 mt-3" })
        </div>

        <div class="d-flex mt-3">
            <input type="submit" value="Guardar" class="btn btn-success flex-grow-1" />
        </div>

        <div class="d-flex mt-5">
            <input type="button" id="btnDelete" value="Eliminar" class="btn btn-danger flex-grow-1" />
        </div>
    }
</div>

<script src="~/Scripts/jquery.validate.min.js"></script>
<script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>
<script src="~/Scripts/notification.js"></script>

<script>
    const id = window.location.pathname.split("/").pop();
    $("#btnDelete").on("click", function () {
        $("#formProduct").attr("action", "/Products/Delete/" + id)
        $("#formProduct").submit();
    });
</script>

<style>
    #formContainer {
        -webkit-box-shadow: 0px 0px 36px 8px rgba(194,194,194,1);
        -moz-box-shadow: 0px 0px 36px 8px rgba(194,194,194,1);
        box-shadow: 0px 0px 36px 8px rgba(194,194,194,1);
        max-width: 600px;
        border-radius: 1rem;
    }
</style>